/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StatsIndexRouteImport } from './routes/stats/index'
import { Route as MoviesIdRouteImport } from './routes/movies/$id'
import { Route as CharacterIdRouteImport } from './routes/character/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatsIndexRoute = StatsIndexRouteImport.update({
  id: '/stats/',
  path: '/stats/',
  getParentRoute: () => rootRouteImport,
} as any)
const MoviesIdRoute = MoviesIdRouteImport.update({
  id: '/movies/$id',
  path: '/movies/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CharacterIdRoute = CharacterIdRouteImport.update({
  id: '/character/$id',
  path: '/character/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/movies/$id': typeof MoviesIdRoute
  '/stats': typeof StatsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/movies/$id': typeof MoviesIdRoute
  '/stats': typeof StatsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/character/$id': typeof CharacterIdRoute
  '/movies/$id': typeof MoviesIdRoute
  '/stats/': typeof StatsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/character/$id' | '/movies/$id' | '/stats'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/character/$id' | '/movies/$id' | '/stats'
  id: '__root__' | '/' | '/character/$id' | '/movies/$id' | '/stats/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CharacterIdRoute: typeof CharacterIdRoute
  MoviesIdRoute: typeof MoviesIdRoute
  StatsIndexRoute: typeof StatsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stats/': {
      id: '/stats/'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movies/$id': {
      id: '/movies/$id'
      path: '/movies/$id'
      fullPath: '/movies/$id'
      preLoaderRoute: typeof MoviesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/character/$id': {
      id: '/character/$id'
      path: '/character/$id'
      fullPath: '/character/$id'
      preLoaderRoute: typeof CharacterIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CharacterIdRoute: CharacterIdRoute,
  MoviesIdRoute: MoviesIdRoute,
  StatsIndexRoute: StatsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
